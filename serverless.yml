service: aws-node-rest-api-project

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  region: ${opt:region, "us-east-1"}
  stage: ${opt:stage, "dev"} # stage "dev" por padr√£o

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: 
        - "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
        
  environment:
    DYNAMODB_TABLE: ${self:service}-instituicoes-${opt:stage, self:provider.stage}

functions:
  getTodos:
    handler: getTodos.execute
    events:
      - http:
          path: /todos/{userId}
          method: get
          request:
            parameters:
              paths:
                userId: true
  createTodos:
    handler: createTodos.execute
    events:
      - http:
          path: /todos/{userId}
          method: post
          request:
            parameters:
              paths:
                userId: true

resources:
  Resources:
    TodosTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
